ARG BASE_IMAGE=nvcr.io/nvidia/l4t-base:r32.3.1
FROM ${BASE_IMAGE}

LABEL maintainer="Shikishima-TasakiLab"

ARG HOST_USER="1000"
ARG USER_NAME="tensorflow"

SHELL ["/bin/bash", "-c"]

RUN useradd -m ${USER_NAME} && \
    echo "${USER_NAME}:${USER_NAME}" | chpasswd && \
    usermod --shell /bin/bash ${USER_NAME} && \
    usermod -aG sudo ${USER_NAME} && \
    echo "${USER_NAME} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/${USER_NAME} && \
    chmod 0440 /etc/sudoers.d/${USER_NAME} && \
    usermod  --uid $HOST_USER ${USER_NAME} && \
    groupmod --gid $HOST_USER ${USER_NAME} && \
    gpasswd -a ${USER_NAME} video

ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        sudo \
        build-essential \
        git \
        less \
        emacs \
        tmux \
        bash-completion \
        command-not-found \
        software-properties-common \
        xdg-user-dirs \
        xsel \
        dirmngr \
        gpg-agent \
        mesa-utils \
        libglu1-mesa-dev \
        libgles2-mesa-dev \
        freeglut3-dev \
        python3-pip \
        python3-dev \
        gfortran \
        libopenblas-dev \
        libhdf5-serial-dev \
        hdf5-tools \
        libhdf5-dev \
        zlib1g-dev \
        zip \
        libjpeg8-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    echo "PYTHONIOENCODING=utf-8" >> /home/${USER_NAME}/.bashrc

RUN pip3 install \
        setuptools \
        Cython \
        wheel --verbose
RUN pip3 install \
        numpy --verbose
RUN HDF5_DIR=/usr/lib/aarch64-linux-gnu/hdf5/serial/ \
    pip3 install \
        h5py==2.9.0 --verbose
RUN pip3 install \
        future==0.17.1 \
        mock==3.0.5 \
        keras_preprocessing==1.0.5 \
        keras_applications==1.0.8 \
        gast==0.2.2 \
        futures \
        protobuf \
        pybind11 --verbose
RUN pip3 install \
        six \
        cycler \
        kiwisolver \
        pyparsing \
        python-dateutil \
        scikit-image==0.16.2 --verbose
RUN pip3 install --no-dependencies \
        matplotlib --verbose

WORKDIR /tmp/tensorflow
ARG TENSORFLOW_WHL=tensorflow_gpu-1.13.1+nv19.5-cp36-cp36m-linux_aarch64.whl
RUN wget https://developer.download.nvidia.com/compute/redist/jp/v42/tensorflow-gpu/${TENSORFLOW_WHL} && \
    pip3 install ${TENSORFLOW_WHL} --verbose && \
    rm ${TENSORFLOW_WHL}
ENV PATH="/usr/local/cuda/bin:${PATH}"
ENV LD_LIBRARY_PATH="/usr/local/cuda/lib64:${LD_LIBRARY_PATH}"
RUN pip3 install pycuda --verbose

USER ${USER_NAME}
WORKDIR /home/${USER_NAME}

COPY ./entrypoint.sh /tmp
ENTRYPOINT ["/tmp/entrypoint.sh"]
